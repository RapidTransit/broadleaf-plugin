
buildscript {
    ext.kotlin_version = '1.1.4-3'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io'}
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.hurricup:gradle-grammar-kit-plugin:2017.1.1"
    }
}
plugins {
    id "org.jetbrains.intellij" version "0.2.17"
}
ext {
    blc = '5.2.0-GA'

}
group 'com.pss'
version '1.0-SNAPSHOT'
//
//apply plugin: 'org.jetbrains.grammarkit'
apply plugin: 'kotlin'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://nexus.broadleafcommerce.org/nexus/content/groups/community-snapshots/'
    }
    maven {
        url 'http://nexus.broadleafcommerce.org/nexus/content/groups/community-releases/'
    }
}

dependencies {
    compile group: 'org.broadleafcommerce', name: 'broadleaf-framework', version: blc
    compile group: 'org.broadleafcommerce', name: 'broadleaf-framework-web', version: blc
    compile group: 'org.broadleafcommerce', name: 'broadleaf-profile', version: blc
    compile group: 'org.broadleafcommerce', name: 'broadleaf-open-admin-platform', version: blc
    compile group: 'org.broadleafcommerce', name: 'broadleaf-contentmanagement-module', version: blc

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

import org.jetbrains.grammarkit.tasks.*

//sourceSets {
//    main {
//        java.srcDirs 'src', new File(project.buildDir, "/classes/java/main/generated")
//    }
//}

//task generateBroadleafParser(type: GenerateParser){
//    source = "${sourceSets.main.kotlin.srcDirs.first()}/com/pss/broadleaf/plugin/grammar/Broadleaf.bnf"
//    targetRoot = new File(project.buildDir, "/classes/java/main/generated")
//    pathToParser = '/com/pss/broadleaf/plugin/grammar/parser/BroadleafParser.java'
//
//    // path to a directory with generated psi files, relative to the targetRoot
//    pathToPsiRoot = '/com/pss/broadleaf/plugin/grammar/parser/psi'
//    purgeOldFiles = true
//}
//
//task generateBroadleafLexer(type: GenerateLexer){
//    def kotlinSourceDir =sourceSets.main.kotlin.srcDirs.first()
//    println(kotlinSourceDir)
//    source = "${sourceSets.main.kotlin.srcDirs.first()}/com/pss/broadleaf/plugin/grammar/Broadleaf.bnf"
//    targetDir = new File(project.buildDir, "/classes/java/main/generated")
//    targetClass = "PerlLexer"
//    purgeOldFiles = true
//}